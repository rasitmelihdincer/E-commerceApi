// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Customer {
  id Int @id @default(autoincrement())
  firstName String 
  lastName String
  email String @unique
  hashedPassword String
  createAt   DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  addresses Address[]
  carts     Cart[]
 }
  model Address {
  id         Int      @id @default(autoincrement())
  customerId Int
  customer   Customer @relation(fields: [customerId], references: [id])

  street     String
  city       String
  country    String
  postcode   String
  createAt   DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

 model Cart {
  id          Int       @id @default(autoincrement())
  customerId  Int
  customer    Customer  @relation(fields: [customerId], references: [id])
  cartItems   CartItem[]
  createdAt   DateTime  @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
 model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int       @default(1)
  createdAt DateTime  @default(now())
 }
 model Product {
  id                Int      @id @default(autoincrement())
  productName       String
  productDescription String
  productCategoryId Int?
  productCategory   Category?  @relation(fields: [productCategoryId], references: [id])
  productStock      Int      @default(0)
  cartItems CartItem[]
  createAt  DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Category {
  id       Int        @id @default(autoincrement())
  name     String
  parentId Int?
  parent   Category? @relation(name: "CategoryParent", fields: [parentId], references: [id])
  children Category[] @relation(name: "CategoryParent")
  products Product[]
}



